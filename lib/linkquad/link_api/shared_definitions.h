#ifdef __cplusplus
extern "C" {
#endif

#ifndef SHARED_DEFINITIONS_H_
#define SHARED_DEFINITIONS_H_

//---------------------- relates to config sent control->sensor
#define CONFIG_ITEM_TYPE_FILTER_COUNT_TO_GET 5
#define CONFIG_ITEM_TYPE_ACCEL_COUNT_TO_GET 1
#define CONFIG_ITEM_TYPE_GYRO_COUNT_TO_GET 1
#define CONFIG_ITEM_TYPE_ADC_COUNT_TO_GET 1
#define CONFIG_ITEM_TYPE_SENSOR_COUNT_TO_GET 1
#define CONFIG_ITEM_TYPE_GPS_COUNT_TO_GET 1
#define CONFIG_ITEM_TYPE_ACF_COUNT_TO_GET 1
#define CONFIG_ITEM_TYPE_HCF_COUNT_TO_GET 1
#define CONFIG_ITEM_TYPE_MAGNETO_COUNT_TO_GET 1

typedef enum {
  CONFIG_ITEM_TYPE_FILTER = 0,
  CONFIG_ITEM_TYPE_ACCEL,
  CONFIG_ITEM_TYPE_GYRO,
  CONFIG_ITEM_TYPE_ADC,
  CONFIG_ITEM_TYPE_SENSOR,
  CONFIG_ITEM_TYPE_GPS,
  CONFIG_ITEM_TYPE_ACF,
  CONFIG_ITEM_TYPE_HCF,
  CONFIG_ITEM_TYPE_MAGNETO,
  CONFIG_ITEM_TYPE_WAIT,
  CONFIG_ITEM_TYPE_DONE
} config_item_type_t;
#define MAX_CONFIG_ITEM_COUNT 32
//---------------------------



typedef enum
{
    MODE_MANUAL = 0,
    MODE_STABILIZED,
  MODE_AUTO
} flight_and_camera_mode_t;

enum
{
    GPS_POS_PACKET_STATUS = 4,
    GPS_VEL_PACKET_STATUS,
    GPS_SOL_PACKET_STATUS,
    GPS_DOP_PACKET_STATUS
};
/*
typedef enum
{
    LOG_OFF = 1,
    LOG_ON = 2,
    LOG_ERASE = 3,
    LOG_DOWNLOAD = 4,
    LOG_IMPOSSIBLE = 5,
    LOG_STARTING = 6,
    LOG_STOPPING = 7
} log_mode_t;
*/
// For handling Single/Multiple block write
typedef enum
{
    SD_SINGLE_BLOCK_WRITE  = 0,
    SD_MULTI_BLOCK_WRITE   = 1
} sd_write_multiplicity;

// For handling nonblocking/blocking write
typedef enum
{
    SD_BLOCKING_WRITE      = 2,
    SD_NONBLOCKING_WRITE   = 3
} sd_write_blocking;

//#define SHARED_PID_SIZE 10

// TODO: On the board, this was only used in control.c, and assumed to be the larger than CONFIG_MIXER_IN_CHANNELS. The value 10 was also used directly.
#define SHARED_SERVO_CHANNELS_SIZE 10

// TODO: On the board, these correspond to NUM_SERVOS in control/servo.h and sensor/servo.h, respectively. Only used in control.c in the old code.
#define SHARED_MIXER_OUT_CHANNELS 10
#define SHARED_MIXER_IN_CHANNELS  7


//#define SHARED_MIXER_OUT_CHANNELS 10
//#define SHARED_MIXER_IN_CHANNELS  7
#define SHARED_MIXER_IN_POINTS  7
#define SHARED_PID_CHANNELS 10
#define SHARED_KF_CONFIGS 5

//-------------------------
// NEW PIDs stuff begin-------------------------
// bit number of PID config which defines if input or target should be transformed to body frame
// 1 byte variable
#define SHARED_PID_TO_BODY_P_INPUT 0
#define SHARED_PID_TO_BODY_P_TARGET 1
#define SHARED_PID_TO_BODY_I_INPUT 2
#define SHARED_PID_TO_BODY_I_TARGET 3
#define SHARED_PID_TO_BODY_D_INPUT 4
#define SHARED_PID_TO_BODY_D_TARGET 5
#define SHARED_PID_ACTIVE 6
#define SHARED_PID_CORRECT_360_P 7
#define SHARED_PID_CORRECT_360_I 8
#define SHARED_PID_CORRECT_360_D 9
#define SHARED_PID_DERIVE_D 10


#define SHARED_VARIABLE_AUG_FIRST 0
#define SHARED_VARIABLE_AUG_COUNT 4

enum {
  SHARED_VARIABLE_AUG_AILERON = 0,
  SHARED_VARIABLE_AUG_ELEVATOR,
  SHARED_VARIABLE_AUG_THROTTLE,
  SHARED_VARIABLE_AUG_RUDDER

};

#define SHARED_VARIABLE_AUG_FLAG_CONTINOUS360 0


// such as sensor data etc.
//#define SHARED_PID_COMMON_INPUTS_COUNT 34




// predefined inner loops
#define SHARED_PID_INNER_LOOPS_FIRST 0
#define SHARED_PID_INNER_LOOPS_COUNT 18
#define SHARED_PID_INNER_LOOPS_GROUPS_COUNT 3

// loops for hover flight control mode
#define SHARED_PID_HOVER_LOOPS_FIRST (SHARED_PID_INNER_LOOPS_FIRST + SHARED_PID_INNER_LOOPS_COUNT)
#define SHARED_PID_HOVER_LOOPS_COUNT 8
#define SHARED_PID_OUTER_LOOPS_OUTPUT_COUNT 8

#define SHARED_PID_CAMERA_LOOPS_FIRST (SHARED_PID_HOVER_LOOPS_FIRST + SHARED_PID_HOVER_LOOPS_COUNT)
#define SHARED_PID_CAMERA_LOOPS_COUNT 12
#define SHARED_PID_CAMERA_LOOPS_GROUPS_COUNT 3

enum {
  SHARED_HOVER_TARGET_UPADTE_0_1 = 0,
  SHARED_HOVER_TARGET_UPADTE_0_2,
  SHARED_HOVER_TARGET_UPADTE_1_0,
  SHARED_HOVER_TARGET_UPADTE_1_2,
  SHARED_HOVER_TARGET_UPADTE_2_0,
  SHARED_HOVER_TARGET_UPADTE_2_1
};

enum {
  SHARED_HOVER_TARGET_AUG_MODE0 = 0,
  SHARED_HOVER_TARGET_AUG_MODE1 ,
  SHARED_HOVER_TARGET_AUG_MODE2
};


enum{
  SHARED_PID_COMMON_INPUT_NONE 				= 0,

        SHARED_PID_COMMON_INPUT_GPS_GROUP, // 1
  SHARED_PID_COMMON_INPUT_GPS_LONGITUDE,
  SHARED_PID_COMMON_INPUT_GPS_LATITUDE,
  SHARED_PID_COMMON_INPUT_GPS_ALTITUDE,

        SHARED_PID_COMMON_INPUT_PRESSURE_SENSOR_GROUP, //5
  SHARED_PID_COMMON_INPUT_PRESSURE_SENSOR_ALTITUDE,
  SHARED_PID_COMMON_INPUT_PRESSURE_SENSOR_ALTITUDE_LP,

        SHARED_PID_COMMON_INPUT_COMPASS_GROUP, //8
  SHARED_PID_COMMON_INPUT_COMPASS_HEADING,

        SHARED_PID_COMMON_INPUT_ATTITUDE_GROUP, //10
  SHARED_PID_COMMON_INPUT_PHI,
  SHARED_PID_COMMON_INPUT_THETA,
  SHARED_PID_COMMON_INPUT_PSI,

        SHARED_PID_COMMON_INPUT_GYROSCOPES_GROUP,//14
  SHARED_PID_COMMON_INPUT_PHI_DOT,
  SHARED_PID_COMMON_INPUT_THETA_DOT,
  SHARED_PID_COMMON_INPUT_PSI_DOT,
  SHARED_PID_COMMON_INPUT_PHI_DOT_LP,
  SHARED_PID_COMMON_INPUT_THETA_DOT_LP,
  SHARED_PID_COMMON_INPUT_PSI_DOT_LP,

        SHARED_PID_COMMON_INPUT_ACCELEROMETER_GROUP,//21
  SHARED_PID_COMMON_INPUT_X_DOT_DOT,
  SHARED_PID_COMMON_INPUT_Y_DOT_DOT,
  SHARED_PID_COMMON_INPUT_Z_DOT_DOT,
  SHARED_PID_COMMON_INPUT_X_DOT_DOT_LP,
  SHARED_PID_COMMON_INPUT_Y_DOT_DOT_LP,
  SHARED_PID_COMMON_INPUT_Z_DOT_DOT_LP,

        SHARED_PID_COMMON_INPUT_RC_STICKS_GROUP,//28
  SHARED_PID_COMMON_INPUT_AILERON_STICK,
  SHARED_PID_COMMON_INPUT_ELEVATOR_STICK,
  SHARED_PID_COMMON_INPUT_RUDDER_STICK,
  SHARED_PID_COMMON_INPUT_THROTTLE_STICK,
  SHARED_PID_COMMON_INPUT_CAMERA_PAN_STICK,
  SHARED_PID_COMMON_INPUT_CAMERA_TILT_STICK,

        SHARED_PID_COMMON_INPUT_RC_STICKS_AT_MS_GROUP, //35//at flight mode switch
  SHARED_PID_COMMON_INPUT_AILERON_STICK_AT_MS,
  SHARED_PID_COMMON_INPUT_ELEVATOR_STICK_AT_MS,
  SHARED_PID_COMMON_INPUT_RUDDER_STICK_AT_MS,
  SHARED_PID_COMMON_INPUT_THROTTLE_STICK_AT_MS,
  SHARED_PID_COMMON_INPUT_CAMERA_PAN_STICK_AT_MS,
  SHARED_PID_COMMON_INPUT_CAMERA_TILT_STICK_AT_MS,

      SHARED_PID_COMMON_INPUT_ALT_CF_GROUP, //42
  SHARED_PID_COMMON_INPUT_ALT_CF_ALT, //altitude complementary filter alt [m]
  SHARED_PID_COMMON_INPUT_ALT_CF_VEL_U, //altitude complementary filter alt [m/s]

    SHARED_PID_COMMON_INPUT_GPS_VELS_GROUP, //45
  SHARED_PID_COMMON_INPUT_GPS_VEL_N,
  SHARED_PID_COMMON_INPUT_GPS_VEL_E,
  SHARED_PID_COMMON_INPUT_GPS_VEL_D,

    SHARED_PID_COMMON_INPUT_GPS_LAT_LON_M_GROUP, //49
  SHARED_PID_COMMON_INPUT_GPS_LAT_M,
  SHARED_PID_COMMON_INPUT_GPS_LON_M,

    SHARED_PID_COMMON_INPUT_GPS_ORIGO_GROUP, //52
  SHARED_PID_COMMON_INPUT_GPS_ORIGO_LAT,
  SHARED_PID_COMMON_INPUT_GPS_ORIGO_LON,
  SHARED_PID_COMMON_INPUT_GPS_ORIGO_ALT,
  SHARED_PID_COMMON_INPUT_GPS_ORIGO_TAKEN,

    SHARED_PID_COMMON_INPUT_HEAD_CF_GROUP, //57
  SHARED_PID_COMMON_INPUT_HEAD_CF,

    SHARED_PID_COMMON_INPUT_MIXER_IN_AT_FMS_GROUP, //59
  SHARED_PID_COMMON_INPUT_MIXER_IN_0_AT_FMS,
  SHARED_PID_COMMON_INPUT_MIXER_IN_1_AT_FMS,
  SHARED_PID_COMMON_INPUT_MIXER_IN_2_AT_FMS,
  SHARED_PID_COMMON_INPUT_MIXER_IN_3_AT_FMS,
  SHARED_PID_COMMON_INPUT_MIXER_IN_4_AT_FMS,
  SHARED_PID_COMMON_INPUT_MIXER_IN_5_AT_FMS,
  SHARED_PID_COMMON_INPUT_MIXER_IN_6_AT_FMS,

                SHARED_PID_COMMON_INPUT_OUTER_LOOP_OUTPUTS_GROUP, //67
  SHARED_PID_COMMON_INPUT_OUTER_LOOP_OUT_0,
  SHARED_PID_COMMON_INPUT_OUTER_LOOP_OUT_1,
  SHARED_PID_COMMON_INPUT_OUTER_LOOP_OUT_2,
  SHARED_PID_COMMON_INPUT_OUTER_LOOP_OUT_3,
  SHARED_PID_COMMON_INPUT_OUTER_LOOP_OUT_4,
  SHARED_PID_COMMON_INPUT_OUTER_LOOP_OUT_5,
  SHARED_PID_COMMON_INPUT_OUTER_LOOP_OUT_6,
  SHARED_PID_COMMON_INPUT_OUTER_LOOP_OUT_7,


  SHARED_PID_COMMON_INPUT_SIZE
};

enum {
  PID_OUTPUT_OPERATION_REPLACE = 0,
  PID_OUTPUT_OPERATION_ADD
};

enum {
        FLIGHT_TARGET_FLAG_LONGITUDE = 0,
        FLIGHT_TARGET_FLAG_LATITUDE,
        FLIGHT_TARGET_FLAG_ALTITUDE,
        FLIGHT_TARGET_FLAG_HEADING

};

// input and outputs to PID loops counts
#define SHARED_PID_IN_OUT_COMMON_FIRST 0
#define SHARED_PID_IN_OUT_COMMON_COUNT (SHARED_PID_COMMON_INPUT_SIZE)
#define SHARED_PID_IN_OUT_PID_RESULTS_FIRST 100
#define SHARED_PID_IN_OUT_PID_RESULTS_COUNT (SHARED_PID_INNER_LOOPS_COUNT + SHARED_PID_CAMERA_LOOPS_COUNT + SHARED_PID_HOVER_LOOPS_COUNT)
#define SHARED_PID_IN_OUT_MIXER_IN_FIRST 170
#define SHARED_PID_IN_OUT_MIXER_IN_COUNT (SHARED_MIXER_IN_CHANNELS)
#define SHARED_PID_IN_OUT_OUTER_RESULTS_FIRST 180
#define SHARED_PID_IN_OUT_OUTER_RESULTS_COUNT 8
#define SHARED_PID_IN_OUT_RECEIVED_FIRST 190
#define SHARED_PID_IN_OUT_RECEIVED_COUNT 40

#define SHARED_PID_IN_OUT_FLIGHT_TARGET_FIRST 240
#define SHARED_PID_IN_OUT_FLIGHT_TARGET_COUNT 4



/* Loops list

0  - 11 Inner loops (3*4)
12 - 19 Hover (8)
20 - 31 Camera (3*4)
[32 - 41 User (8)]

Execution
- [User (8)]
- Camera control loops ([3*]4)
    - mode0: 20,21,22,23
    - mode1: 24,25,26,27
    - mode2: 28,29,30,31
- Flight control function
  - hover loops (8)
   - 12 - 19 if active
- Inner loops ([3*]4)
    - mode0: 0,1,2,3
    - mode1: 4,5,6,7
    - mode2: 8,9,10,11

// -----------------
Input / output
0   - 99 Common (sensors etc) (int)
100 - 199 Loop results (in/out)
200 - 219 Mixer in (out)
220 - 229 Outer loops result (int/out)
230 - 239 Received values (in)
*/
// NEW PIDs stuff end
//-------------------------


enum {
        COMM_DESTINATION_MCU1 = 0,
        COMM_DESTINATION_MCU2,
        COMM_DESTINATION_GUMSTIX1,
        COMM_DESTINATION_GUMSTIX2,
        COMM_DESTINATION_GS
};

// com mux stuff

#define UDP_ROBOT_START_PORT 40000
#define UDP_MUX_ROBOT_SIDE_START_PORT 42000
#define UDP_MUX_APP_SIDE_START_PORT 44000
#define UDP_APP_START_PORT 46000

#define MAX_NUMBER_OF_ROBOTS 100

#define UDP_LINKGS_INDEX 0
#define UDP_ROSCONNECT_INDEX 1

#define MAX_NUMBER_OF_APPS 10

// ROBOT PORT: UDP_ROBOT_START_PORT + unit
// MUX ROBOT SIDE: UDP_MUX_ROBOT_SIDE_START_PORT + unit
// MUX APP: UDP_MUX_APP_SIDE_START_PORT + MAX_NUMBER_OF_APPS*unit + UDP_ROSCONNECT_INDEX
// APP: UDP_APP_START_PORT + MAX_NUMBER_OF_APPS*unit + UDP_ROSCONNECT_INDEX


#endif /* SHARED_DEFINITIONS_H_ */

#ifdef __cplusplus
}
#endif
